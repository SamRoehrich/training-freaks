package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"
	"fmt"
	"samroehrich/training-freaks/graph/model"
)

// CreateActivity is the resolver for the createActivity field.
func (r *mutationResolver) CreateActivity(ctx context.Context, input model.ActivityInput) (*model.Activity, error) {
	panic(fmt.Errorf("not implemented: CreateActivity - createActivity"))
}

// Activity is the resolver for the activity field.
func (r *queryResolver) Activity(ctx context.Context, id *string) (*model.Activity, error) {

	err := r.DB.Ping()

	if err != nil {
		fmt.Println("nop")
	}
	fmt.Println("yep")
	return &model.Activity{
		Name: "yeet",
	}, nil
}

func (r *queryResolver) Activities(ctx context.Context) ([]*model.Activity, error) {
	panic(fmt.Errorf("goofing"))
	} 

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver}